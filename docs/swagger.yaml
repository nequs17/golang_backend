definitions:
  api.Data:
    properties:
      bandwidth:
        type: string
      cellID:
        type: string
      cqi:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      rsrp:
        type: string
      rsrq:
        type: string
      rssi:
        type: string
      rssnr:
        type: string
      time:
        type: string
      uuid:
        type: string
    type: object
  api.Data_users:
    properties:
      email:
        type: string
      group:
        type: string
      uuid:
        type: string
      verifed:
        type: boolean
    type: object
  api.authRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.authResponseError:
    properties:
      error:
        type: string
    type: object
  api.authResponseSuccess:
    properties:
      email:
        type: string
      jwt:
        type: string
      role:
        type: string
    type: object
  api.jwtValidationResult:
    properties:
      error:
        type: string
      result:
        type: string
    type: object
  api.linkResponse:
    properties:
      test_link:
        type: string
    type: object
  api.linkResponseErr:
    properties:
      error:
        type: string
    type: object
  api.registerRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.registerResponseError:
    properties:
      error:
        type: string
    type: object
  api.registerResponseSuccess:
    properties:
      email:
        type: string
      jwt:
        type: string
      message:
        type: string
      uuid:
        type: string
    type: object
  net.Msg:
    additionalProperties: true
    type: object
  types.Token:
    properties:
      jwt:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/admin/changerole:
    get:
      consumes:
      - application/json
      operationId: ChangeRole
      parameters:
      - description: email
        in: query
        name: email
        type: string
      - description: role
        in: query
        name: role
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Role
        "400":
          description: You not admin
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: 'Failed to query data: [Error Message]'
          schema:
            type: string
      summary: Change User Role
      tags:
      - admin
  /api/admin/users:
    post:
      description: Get all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Data_users'
            type: array
        "400":
          description: You not admin
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: 'Failed to query data: [Error Message]'
          schema:
            type: string
      summary: Get all user
      tags:
      - admin
  /api/engineer/addbasestation:
    post:
      consumes:
      - application/json
      operationId: AddBaseStation
      parameters:
      - description: lat
        in: query
        name: Latitude
        type: string
      - description: lon
        in: query
        name: Longitude
        type: string
      - description: cellid
        in: query
        name: CellID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Role
        "400":
          description: You not engineer or admin
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: 'Failed to query data: [Error Message]'
          schema:
            type: string
      summary: Change User Role
      tags:
      - engineer
  /api/engineer/verifybasestation:
    post:
      consumes:
      - application/json
      operationId: verifybasestation
      parameters:
      - description: lat
        in: query
        name: Latitude
        type: string
      - description: lon
        in: query
        name: Longitude
        type: string
      - description: cellid
        in: query
        name: CellID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Role
        "400":
          description: You not engineer or admin
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: 'Failed to query data: [Error Message]'
          schema:
            type: string
      summary: Change User Role
      tags:
      - engineer
  /api/jwt/test:
    post:
      description: Создание JWT токена для пользователя "test_user"
      operationId: createJwtToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Token'
      summary: Получение JWT токена
  /api/jwt/verify:
    post:
      consumes:
      - application/json
      description: Проверка валидности переданного тестового JWT токена
      operationId: verifyJwtToken
      parameters:
      - description: Bearer your_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.jwtValidationResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.jwtValidationResult'
      summary: Проверка валидности JWT токена
  /api/picture/thermalmappic:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves thermal data based on query parameters
        and returns an image.
      operationId: ThermalMapPicture
      parameters:
      - description: 'Start Time in RFC3339 format (example: 2024-05-18T18:15:00.000+03:00)'
        in: query
        name: start_time
        type: string
      - description: 'End Time in RFC3339 format (example: 2024-05-18T18:16:00.000+03:00)'
        in: query
        name: end_time
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: Image representing the thermal data
          schema:
            type: file
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: Failed to query or encode data
          schema:
            type: string
      summary: Retrieves thermal data based on query parameters
  /api/sockets/thermalmapdata:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves thermal data based on query parameters.
      operationId: socketThermalOut
      parameters:
      - description: UUID
        in: query
        name: uuid
        type: string
      - description: 'Start Time in RFC3339 format (example: 2024-05-18T18:15:00.000+03:00)'
        in: query
        name: start_time
        type: string
      - description: 'End Time in RFC3339 format (example: 2024-05-18T18:16:00.000+03:00)'
        in: query
        name: end_time
        type: string
      - description: Latitude
        in: query
        name: latitude
        type: string
      - description: Longitude
        in: query
        name: longitude
        type: string
      - description: RSRP
        in: query
        name: rsrp
        type: string
      - description: RSSI
        in: query
        name: rssi
        type: string
      - description: RSRQ
        in: query
        name: rsrq
        type: string
      - description: RSSNR
        in: query
        name: rssnr
        type: string
      - description: CQI
        in: query
        name: cqi
        type: string
      - description: Bandwidth
        in: query
        name: bandwidth
        type: string
      - description: Cell ID
        in: query
        name: cell_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of thermal data
          schema:
            items:
              $ref: '#/definitions/api.Data'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: Failed to query or encode data
          schema:
            type: string
      summary: Retrieves thermal data based on query parameters
  /api/user/auth:
    post:
      consumes:
      - application/json
      description: |-
        Производит аутентификацию пользователя на основе предоставленных данных
        При авторизации без пароля можно произвести авторизацию через Token
        Для этого по аналогии с /api/jwt/verify в поле Authorization нужно разместить ваш значение Bearer: <your_token>
        Email всё равно нужно указать для избежания "призрачных" аккаунтов, сопоставляется с текущими email
      operationId: authenticateUser
      parameters:
      - description: Bearer your_token
        in: header
        name: Authorization
        type: string
      - description: Данные пользователя для аутентификации
        in: body
        name: body
        schema:
          $ref: '#/definitions/api.authRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/api.authResponseSuccess'
        "400":
          description: Ошибка аутентификации
          schema:
            $ref: '#/definitions/api.authResponseError'
      summary: Аутентификация пользователя и выдача токена доступа
      tags:
      - user
  /api/user/getapptrafic:
    get:
      consumes:
      - application/json
      operationId: GetAppTrafic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Traffic
        "400":
          description: No data
          schema:
            type: string
        "500":
          description: 'Failed to encode data to JSON: [Error Message]'
          schema:
            type: string
      summary: Get App Trafic
      tags:
      - user
  /api/user/logout:
    get:
      description: This endpoint logs out a user by invalidating their session.
      operationId: userLogout
      produces:
      - application/json
      responses:
        "200":
          description: Successful logout
          schema:
            $ref: '#/definitions/net.Msg'
      summary: Logs out a user
      tags:
      - user
  /api/user/postapptrafic:
    post:
      consumes:
      - application/json
      operationId: PostAppTrafic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Role
        "400":
          description: You not admin
          schema:
            type: string
        "404":
          description: No data found
          schema:
            type: string
        "500":
          description: 'Failed to query data: [Error Message]'
          schema:
            type: string
      summary: PostAppTrafic
      tags:
      - FORTEST!!!!
  /api/user/register:
    post:
      consumes:
      - application/json
      description: |-
        Производит аутентификацию пользователя на основе предоставленных данных
        При авторизации без пароля можно произвести авторизацию через Token
        Для этого по аналогии с /api/jwt/verify в поле Authorization нужно разместить ваш значение Bearer: <your_token>
        Email всё равно нужно указать для избежания "призрачных" аккаунтов, сопоставляется с текущими email
      operationId: registrationUser
      parameters:
      - description: Bearer your_token
        in: header
        name: Authorization
        type: string
      - description: Данные пользователя для аутентификации
        in: body
        name: body
        schema:
          $ref: '#/definitions/api.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/api.registerResponseSuccess'
        "400":
          description: Ошибка аутентификации
          schema:
            $ref: '#/definitions/api.registerResponseError'
      summary: Регистрирует пользователя и выдача токена доступа
      tags:
      - user
  /api/user/verify:
    get:
      consumes:
      - application/json
      description: |-
        Проверка валидности переданного ключа верификации пользователя
        Для выдачи такой ссылки в поле key ничего не пишите, поставьте поле "тестовый режим" на значение 1 и сделайте отправку
        Для конечной проверки перейдите по тестовой ссылке (НЕ ЯВЛЯЕТСЯ ЧАСТЬЮ API ради забавы разместил)
      operationId: verifyUserKey
      parameters:
      - description: Ключ верификации пользователя
        in: query
        name: key
        type: string
      - default: 0
        description: Тестовый режим
        enum:
        - 0
        - 1
        in: query
        name: test
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешная проверка ключа
          schema:
            $ref: '#/definitions/net.Msg'
        "400":
          description: Ошибка при проверке ключа
          schema:
            $ref: '#/definitions/api.linkResponseErr'
        "426":
          description: Ключ
          schema:
            $ref: '#/definitions/api.linkResponse'
      summary: Верификация почты путём перехода по ссылке
swagger: "2.0"
